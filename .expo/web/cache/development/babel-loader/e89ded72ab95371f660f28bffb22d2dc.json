{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var HexKeyboard = function HexKeyboard(_ref) {\n  var style = _ref.style,\n      inputText = _ref.inputText;\n  var keys = [{\n    title: \"7\",\n    value: \"7\"\n  }, {\n    title: \"8\",\n    value: \"8\"\n  }, {\n    title: \"9\",\n    value: \"9\"\n  }, {\n    title: \"A\",\n    value: \"A\"\n  }, {\n    title: \"B\",\n    value: \"B\"\n  }, {\n    title: \"C\",\n    value: \"C\"\n  }, {\n    title: \"4\",\n    value: \"4\"\n  }, {\n    title: \"5\",\n    value: \"5\"\n  }, {\n    title: \"6\",\n    value: \"6\"\n  }, {\n    title: \"D\",\n    value: \"D\"\n  }, {\n    title: \"E\",\n    value: \"E\"\n  }, {\n    title: \"F\",\n    value: \"F\"\n  }, {\n    title: \"1\",\n    value: \"1\"\n  }, {\n    title: \"2\",\n    value: \"2\"\n  }, {\n    title: \"3\",\n    value: \"3\"\n  }, {\n    title: \"0\",\n    value: \"0\"\n  }, {\n    title: \"\\u21B6\",\n    value: \"cancel\"\n  }, {\n    title: \"\\u21B5\",\n    value: \"enter\"\n  }];\n  return _jsx(View, {\n    style: style,\n    children: _jsx(View, {\n      style: styles.container,\n      children: keys.map(function (i) {\n        return _jsx(View, {\n          style: styles.button,\n          children: _jsx(TouchableOpacity, {\n            style: {\n              alignItems: \"center\"\n            },\n            onPress: function onPress() {\n              return inputText(i.value);\n            },\n            children: _jsxs(Text, {\n              style: styles.buttonLabel,\n              children: [\" \", i.title, \" \"]\n            })\n          })\n        }, i.title);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 175,\n    backgroundColor: \"#9199A4\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 5\n  },\n  button: {\n    minWidth: \"15%\",\n    borderRadius: 12,\n    borderColor: \"#E0E0E4\",\n    borderWidth: 2,\n    margin: \"0.5%\"\n  },\n  buttonLabel: {\n    padding: 10,\n    fontSize: 22,\n    lineHeight: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/Sonya/Documents/GitHub/SF-RN-TestHex/components/HexKeyboard/index.tsx"],"names":["React","HexKeyboard","style","inputText","keys","title","value","styles","container","map","i","button","alignItems","buttonLabel","StyleSheet","create","height","backgroundColor","flexDirection","flexWrap","justifyContent","paddingVertical","minWidth","borderRadius","borderColor","borderWidth","margin","padding","fontSize","lineHeight"],"mappings":"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","sourcesContent":["import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text, StyleSheet, StyleProp, ViewStyle } from \"react-native\";\r\n\r\ninterface HexKeyboardProps {\r\n  style?: StyleProp<ViewStyle>;\r\n  inputText: (value: string) => void;\r\n}\r\n\r\nexport const HexKeyboard: React.FunctionComponent<HexKeyboardProps> = ({\r\n  style,\r\n  inputText,\r\n}) => {\r\n\r\n  type Key = {\r\n    title: string;\r\n    value: string;\r\n  };\r\n\r\n  const keys: Key[] = [\r\n    { title: \"7\", value: \"7\" },\r\n    { title: \"8\", value: \"8\" },\r\n    { title: \"9\", value: \"9\" },\r\n    { title: \"A\", value: \"A\" },\r\n    { title: \"B\", value: \"B\" },\r\n    { title: \"C\", value: \"C\" },\r\n    { title: \"4\", value: \"4\" },\r\n    { title: \"5\", value: \"5\" },\r\n    { title: \"6\", value: \"6\" },\r\n    { title: \"D\", value: \"D\" },\r\n    { title: \"E\", value: \"E\" },\r\n    { title: \"F\", value: \"F\" },\r\n    { title: \"1\", value: \"1\" },\r\n    { title: \"2\", value: \"2\" },\r\n    { title: \"3\", value: \"3\" },\r\n    { title: \"0\", value: \"0\" },\r\n    { title: `\\u21B6`, value: \"cancel\" },\r\n    { title: `\\u21B5`, value: \"enter\" },\r\n  ];\r\n\r\n  return (\r\n    <View style={style}>\r\n      <View style={styles.container}>\r\n        {keys.map((i) => (\r\n          <View key={i.title} style={styles.button}>\r\n            <TouchableOpacity style={{ alignItems: \"center\" }} onPress={() => inputText(i.value)}>\r\n              <Text style={styles.buttonLabel}> {i.title} </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 175,\r\n    backgroundColor: \"#9199A4\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 5\r\n  },\r\n  button: {\r\n    minWidth: \"15%\",\r\n    borderRadius: 12,\r\n    borderColor: \"#E0E0E4\",\r\n    borderWidth: 2,\r\n    margin: \"0.5%\",\r\n  },\r\n  buttonLabel: {\r\n    padding: 10,\r\n    fontSize: 22,\r\n    lineHeight: 24,\r\n  },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}