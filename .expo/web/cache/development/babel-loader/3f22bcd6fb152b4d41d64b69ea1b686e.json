{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"sm\", \"nm\", \"md\", \"lg\", \"ml\", \"xl\", \"dark\", \"light\", \"center\", \"success\", \"primary\", \"inactive\", \"secondary\", \"bold\", \"normal\", \"semiBold\", \"children\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect } from 'react';\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as font from \"expo-font\";\nimport Colors from \"../../constants/\\u0421olors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Text = function Text(props) {\n  var sm = props.sm,\n      nm = props.nm,\n      md = props.md,\n      lg = props.lg,\n      ml = props.ml,\n      xl = props.xl,\n      dark = props.dark,\n      light = props.light,\n      center = props.center,\n      success = props.success,\n      primary = props.primary,\n      inactive = props.inactive,\n      secondary = props.secondary,\n      bold = props.bold,\n      normal = props.normal,\n      semiBold = props.semiBold,\n      children = props.children,\n      style = props.style,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  useEffect(function () {\n    font.loadAsync({\n      'OpenSans': require(\"./assets/fonts/OpenSans.ttf\")\n    });\n  }, []);\n  return _jsx(RNText, _objectSpread(_objectSpread({\n    style: [styles.text, sm && styles.textSm, nm && styles.textNm, md && styles.textMd, lg && styles.textLg, ml && styles.textMl, xl && styles.textXl, dark && styles.textDark, light && styles.textLight, center && styles.textCenter, success && styles.textSuccess, primary && styles.textPrimary, inactive && styles.textInactive, secondary && styles.textSecondary, style]\n  }, rest), {}, {\n    children: children\n  }));\n};\nexport default Text;\nvar styles = StyleSheet.create({\n  titleLight: {\n    color: '#fff'\n  },\n  text: {\n    color: Colors.TextPrimary,\n    fontSize: 14,\n    fontFamily: 'OpenSans'\n  },\n  textSm: {\n    fontSize: 12\n  },\n  textNm: {\n    fontSize: 14\n  },\n  textMd: {\n    fontSize: 16\n  },\n  textLg: {\n    fontSize: 18\n  },\n  textMl: {\n    fontSize: 20\n  },\n  textXl: {\n    fontSize: 24\n  },\n  textDark: {\n    color: Colors.TextPrimary\n  },\n  textLight: {\n    color: '#fff'\n  },\n  textPrimary: {\n    color: Colors.Primary\n  },\n  textSuccess: {\n    color: Colors.TextSuccess\n  },\n  textInactive: {\n    color: Colors.TextInactive\n  },\n  textSecondary: {\n    color: Colors.TextSecondary\n  },\n  textCenter: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Programms/SolutionFactory-RN-Test/components/Typography/index.tsx"],"names":["React","useEffect","font","Colors","Text","props","sm","nm","md","lg","ml","xl","dark","light","center","success","primary","inactive","secondary","bold","normal","semiBold","children","style","rest","loadAsync","require","styles","text","textSm","textNm","textMd","textLg","textMl","textXl","textDark","textLight","textCenter","textSuccess","textPrimary","textInactive","textSecondary","StyleSheet","create","titleLight","color","TextPrimary","fontSize","fontFamily","Primary","TextSuccess","TextInactive","TextSecondary","textAlign"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\r\nimport { Text as RNText, StyleSheet, TextProps } from 'react-native'\r\nimport * as font from \"expo-font\";\r\nimport Colors from '../../constants/Ð¡olors'\r\n\r\ninterface TypographyProps extends TextProps {\r\n    sm?: boolean\r\n    nm?: boolean\r\n    md?: boolean\r\n    lg?: boolean\r\n    ml?: boolean\r\n    xl?: boolean\r\n\r\n    center?: boolean\r\n\r\n    dark?: boolean\r\n    light?: boolean\r\n    primary?: boolean\r\n    success?: boolean\r\n    inactive?: boolean\r\n    secondary?: boolean\r\n\r\n    bold?: boolean\r\n    normal?: boolean\r\n    semiBold?: boolean\r\n}\r\n\r\nexport const Text: React.FunctionComponent<TypographyProps> = (props) => {\r\n    const { sm, nm, md, lg, ml, xl, dark, light, center, success, primary, inactive, secondary, bold, normal, semiBold, children, style, ...rest } = props\r\n    \r\n    useEffect(() => {\r\n        font.loadAsync({\r\n          'OpenSans': require(\"./assets/fonts/OpenSans.ttf\"),\r\n        });\r\n      }, []);\r\n\r\n    return (\r\n        <RNText style={[\r\n            styles.text,\r\n            sm && styles.textSm,\r\n            nm && styles.textNm,\r\n            md && styles.textMd,\r\n            lg && styles.textLg,\r\n            ml && styles.textMl,\r\n            xl && styles.textXl,\r\n            dark && styles.textDark,\r\n            light && styles.textLight,\r\n            center && styles.textCenter,\r\n            success && styles.textSuccess,\r\n            primary && styles.textPrimary,\r\n            inactive && styles.textInactive,\r\n            secondary && styles.textSecondary,\r\n            style\r\n        ]} {...rest}>\r\n            {children}\r\n        </RNText>\r\n    )\r\n}\r\n\r\nexport default Text\r\n\r\nconst styles = StyleSheet.create({\r\n    titleLight: {\r\n        color: '#fff'\r\n    },\r\n\r\n    text: {\r\n        color: Colors.TextPrimary,\r\n        fontSize: 14,\r\n        fontFamily: 'OpenSans'\r\n    },\r\n\r\n    textSm: {\r\n        fontSize: 12\r\n    },\r\n    textNm: {\r\n        fontSize: 14\r\n    },\r\n    textMd: {\r\n        fontSize: 16\r\n    },\r\n    textLg: {\r\n        fontSize: 18\r\n    },\r\n    textMl: {\r\n        fontSize: 20\r\n    },\r\n    textXl: {\r\n        fontSize: 24\r\n    },\r\n\r\n    textDark: {\r\n        color: Colors.TextPrimary\r\n    },\r\n    textLight: {\r\n        color: '#fff'\r\n    },\r\n    textPrimary: {\r\n        color: Colors.Primary\r\n    },\r\n    textSuccess: {\r\n        color: Colors.TextSuccess\r\n    },\r\n    textInactive: {\r\n        color: Colors.TextInactive\r\n    },\r\n    textSecondary: {\r\n        color: Colors.TextSecondary\r\n    },\r\n\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}