{"ast":null,"code":"import React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../../constants/\\u0421olors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Button = function Button(props) {\n  var icon = props.icon,\n      _style = props.style,\n      onPress = props.onPress,\n      red = props.red,\n      light = props.light,\n      children = props.children,\n      outline = props.outline,\n      disabled = props.disabled,\n      absolute = props.absolute;\n  return _jsx(Pressable, {\n    style: function style(_ref) {\n      var pressed = _ref.pressed;\n      return [_style, styles.button, !disabled && styles.buttonShadow, pressed && styles.buttonActive, absolute && styles.buttonAbsolute];\n    },\n    onPress: onPress,\n    disabled: disabled,\n    children: _jsxs(LinearGradient, {\n      start: {\n        x: 0.2,\n        y: 0.1\n      },\n      style: [styles.buttonGradient, disabled && {\n        borderWidth: 2,\n        borderColor: Colors.TextDisabled\n      }],\n      colors: disabled ? [Colors.BgDisabled, Colors.BgDisabled] : red ? ['#FF4828', '#FF4828'] : light ? ['#fff', '#fff'] : Colors.Gradient,\n      locations: light || disabled ? [1, 1] : [0.08, 0.8],\n      children: [icon, outline ? _jsx(View, {\n        style: [styles.buttonOutline, disabled && styles.buttonDisabled],\n        children: _jsx(Text, {\n          style: [styles.buttonText, styles.buttonTextOutline, disabled && styles.buttonTextDisabled],\n          children: children\n        })\n      }) : _jsx(Text, {\n        style: [styles.buttonText, disabled && styles.buttonTextDisabled, light && styles.buttonTextLight],\n        children: children\n      })]\n    })\n  });\n};\nexport default Button;\nvar styles = StyleSheet.create({\n  button: {\n    minHeight: 43,\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  },\n  buttonShadow: {\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowColor: '#000',\n    shadowRadius: 10,\n    shadowOpacity: 0.12\n  },\n  buttonGradient: {\n    flex: 1,\n    padding: 2,\n    borderRadius: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  buttonActive: {\n    elevation: 4,\n    shadowRadius: 15,\n    shadowOpacity: 0.2\n  },\n  buttonOutline: {\n    flex: 1,\n    height: '100%',\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  buttonDisabled: {\n    backgroundColor: Colors.BgDisabled\n  },\n  buttonPlus: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 10\n  },\n  buttonAbsolute: {\n    left: 24,\n    right: 24,\n    bottom: 24,\n    position: 'absolute'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 14,\n    lineHeight: 19\n  },\n  buttonTextPlus: {\n    color: Colors.TextPrimary,\n    fontSize: 14,\n    lineHeight: 19,\n    marginLeft: 8\n  },\n  buttonTextLight: {\n    color: Colors.Primary\n  },\n  buttonTextOutline: {\n    color: Colors.Primary\n  },\n  buttonTextDisabled: {\n    color: Colors.TextDisabled\n  }\n});","map":{"version":3,"sources":["C:/Users/Sonya/Documents/GitHub/SF-RN-TestHex/components/Button/index.tsx"],"names":["React","LinearGradient","Colors","Button","props","icon","style","onPress","red","light","children","outline","disabled","absolute","pressed","styles","button","buttonShadow","buttonActive","buttonAbsolute","x","y","buttonGradient","borderWidth","borderColor","TextDisabled","BgDisabled","Gradient","buttonOutline","buttonDisabled","buttonText","buttonTextOutline","buttonTextDisabled","buttonTextLight","StyleSheet","create","minHeight","borderRadius","backgroundColor","elevation","shadowOffset","width","height","shadowColor","shadowRadius","shadowOpacity","flex","padding","alignItems","flexDirection","justifyContent","buttonPlus","paddingHorizontal","left","right","bottom","position","color","fontSize","lineHeight","buttonTextPlus","TextPrimary","marginLeft","Primary"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\nimport { Text, View, Pressable, StyleSheet } from 'react-native'\r\n\r\nimport Colors from '../../constants/Ð¡olors'\r\n\r\ninterface ButtonProps {\r\n    icon?: object\r\n    style?: object\r\n    red?: boolean\r\n    light?: boolean\r\n    onPress?(): void\r\n    outline?: boolean\r\n    disabled?: boolean\r\n    absolute?: boolean\r\n}\r\n\r\nexport const Button: React.FunctionComponent<ButtonProps> = (props) => {\r\n    const { icon, style, onPress, red, light, children, outline, disabled, absolute } =\r\n        props\r\n\r\n    return (\r\n        <Pressable\r\n            style={({ pressed }) => [\r\n                style,\r\n                styles.button,\r\n                !disabled && styles.buttonShadow,\r\n                pressed && styles.buttonActive,\r\n                absolute && styles.buttonAbsolute\r\n            ]}\r\n            onPress={onPress}\r\n            disabled={disabled}\r\n        >\r\n            <LinearGradient\r\n                start={{ x: 0.2, y: 0.1 }}\r\n                style={[\r\n                    styles.buttonGradient,\r\n                    disabled && { borderWidth: 2, borderColor: Colors.TextDisabled }\r\n                ]}\r\n                colors={\r\n                    disabled\r\n                        ? [Colors.BgDisabled, Colors.BgDisabled]\r\n                        : red\r\n                            ? ['#FF4828', '#FF4828']\r\n                            : light\r\n                                ? ['#fff', '#fff']\r\n                                : Colors.Gradient\r\n                }\r\n                locations={light || disabled ? [1, 1] : [0.08, 0.8]}\r\n            >\r\n                {icon}\r\n                {outline ? (\r\n                    <View style={[styles.buttonOutline, disabled && styles.buttonDisabled]}>\r\n                        <Text\r\n                            style={[\r\n                                styles.buttonText,\r\n                                styles.buttonTextOutline,\r\n                                disabled && styles.buttonTextDisabled\r\n                            ]}\r\n                        >\r\n                            {children}\r\n                        </Text>\r\n                    </View>\r\n                ) : (\r\n                    <Text\r\n                        style={[\r\n                            styles.buttonText,\r\n                            disabled && styles.buttonTextDisabled,\r\n                            light && styles.buttonTextLight\r\n                        ]}\r\n                    >\r\n                        {children}\r\n                    </Text>\r\n                )}\r\n            </LinearGradient>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        minHeight: 43,\r\n        borderRadius: 10,\r\n        backgroundColor: '#fff'\r\n    },\r\n    buttonShadow: {\r\n        elevation: 3,\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowColor: '#000',\r\n        shadowRadius: 10,\r\n        shadowOpacity: 0.12\r\n    },\r\n    buttonGradient: {\r\n        flex: 1,\r\n        padding: 2,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    buttonActive: {\r\n        elevation: 4,\r\n        shadowRadius: 15,\r\n        shadowOpacity: 0.2\r\n    },\r\n    buttonOutline: {\r\n        flex: 1,\r\n        height: '100%',\r\n        borderRadius: 8,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff'\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: Colors.BgDisabled\r\n    },\r\n    buttonPlus: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        paddingHorizontal: 10\r\n    },\r\n    buttonAbsolute: {\r\n        left: 24,\r\n        right: 24,\r\n        bottom: 24,\r\n        position: 'absolute'\r\n    },\r\n\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 14,\r\n        lineHeight: 19,\r\n    },\r\n    buttonTextPlus: {\r\n        color: Colors.TextPrimary,\r\n        fontSize: 14,\r\n        lineHeight: 19,\r\n        marginLeft: 8\r\n    },\r\n    buttonTextLight: {\r\n        color: Colors.Primary\r\n    },\r\n    buttonTextOutline: {\r\n        color: Colors.Primary\r\n    },\r\n    buttonTextDisabled: {\r\n        color: Colors.TextDisabled\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}