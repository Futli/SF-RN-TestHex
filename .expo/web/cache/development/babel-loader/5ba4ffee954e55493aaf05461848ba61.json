{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"./components/Button\";\nimport * as font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameIdentifier = _useState2[0],\n      setNameIdentifier = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numberIdentifier = _useState4[0],\n      setNumberIdentifier = _useState4[1];\n\n  useEffect(function () {\n    font.loadAsync({\n      'OpenSans': require(\"./assets/fonts/OpenSans.ttf\")\n    });\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(StatusBar, {\n      style: \"inverted\"\n    }), _jsx(Header, {\n      title: \"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Input, {\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        style: styles.input,\n        value: nameIdentifier,\n        onChange: function onChange(e) {\n          return setNameIdentifier(e);\n        }\n      }), _jsx(Input, {\n        placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440\",\n        type: \"hex\",\n        style: styles.input,\n        value: numberIdentifier,\n        maxLength: 11,\n        onChange: function onChange(text) {\n          return setNumberIdentifier(text);\n        }\n      }), _jsx(Button, {\n        style: styles.button,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }), _jsx(Button, {\n        style: styles.button,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 16\n  },\n  maskInput: {\n    padding: 10,\n    fontSize: 14,\n    borderRadius: 8,\n    backgroundColor: \"#fff\"\n  },\n  input: {\n    marginTop: 16\n  },\n  button: {\n    marginTop: 13\n  },\n  keyboardStyle: {\n    display: \"flex\",\n    height: 400,\n    bottom: 400,\n    backgroundColor: 'blue'\n  }\n});","map":{"version":3,"sources":["D:/Programms/SolutionFactory-RN-Test/App.tsx"],"names":["StatusBar","Header","Input","useState","useEffect","Button","font","App","nameIdentifier","setNameIdentifier","numberIdentifier","setNumberIdentifier","loadAsync","require","styles","container","input","e","text","button","StyleSheet","create","marginHorizontal","maskInput","padding","fontSize","borderRadius","backgroundColor","marginTop","keyboardStyle","display","height","bottom"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;AAQA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;;AAKA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA4CJ,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAgDN,QAAQ,CAAC,EAAD,CAAxD;AAAA;AAAA,MAAOO,gBAAP;AAAA,MAAyBC,mBAAzB;;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,IAAI,CAACM,SAAL,CAAe;AACb,kBAAYC,OAAO;AADN,KAAf;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADF,EAEE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd,MAFF,EAGE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,kDADd;AAEE,QAAA,KAAK,EAAED,MAAM,CAACE,KAFhB;AAGE,QAAA,KAAK,EAAER,cAHT;AAIE,QAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,iBAAeR,iBAAiB,CAACQ,CAAD,CAAhC;AAAA;AAJZ,QADF,EAQI,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,gCADd;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,KAAK,EAAEH,MAAM,CAACE,KAHhB;AAIE,QAAA,KAAK,EAAEN,gBAJT;AAKE,QAAA,SAAS,EAAE,EALb;AAME,QAAA,QAAQ,EAAE,kBAACQ,IAAD;AAAA,iBAAkBP,mBAAmB,CAACO,IAAD,CAArC;AAAA;AANZ,QARJ,EAiBG,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAEJ,MAAM,CAACK,MAAtB;AAAA;AAAA,QAjBH,EAkBG,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAEL,MAAM,CAACK,MAAtB;AAAA;AAAA,QAlBH;AAAA,MAHF;AAAA,IADF;AA0BD;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,gBAAgB,EAAE;AADT,GADoB;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,EADA;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,eAAe,EAAE;AAJR,GAJoB;AAU/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,SAAS,EAAE;AADN,GAVwB;AAa/BT,EAAAA,MAAM,EAAE;AACNS,IAAAA,SAAS,EAAE;AADL,GAbuB;AAgB/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,MAAM,EAAE,GAFK;AAGbC,IAAAA,MAAM,EAAE,GAHK;AAIbL,IAAAA,eAAe,EAAE;AAJJ;AAhBgB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport Header from \"./components/Header\";\r\nimport Input from \"./components/Input\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./components/Button\";\r\n\r\nimport * as font from \"expo-font\";\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [nameIdentifier, setNameIdentifier] = useState(\"\");\r\n  const [numberIdentifier, setNumberIdentifier] = useState(\"\");\r\n \r\n\r\n  useEffect(() => {\r\n    font.loadAsync({\r\n      'OpenSans': require('./assets/fonts/OpenSans.ttf'),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <StatusBar style=\"inverted\" />\r\n      <Header title=\"Идентификатор\" />\r\n      <View style={styles.container}>\r\n        <Input\r\n          placeholder=\"Название\"\r\n          style={styles.input}\r\n          value={nameIdentifier}\r\n          onChange={(e: string) => setNameIdentifier(e)}\r\n        />\r\n       \r\n          <Input\r\n            placeholder=\"Номер\"\r\n            type='hex'\r\n            style={styles.input}\r\n            value={numberIdentifier}\r\n            maxLength={11}            \r\n            onChange={(text: string) => setNumberIdentifier(text)}\r\n          />\r\n\r\n         <Button style={styles.button} >Сохранить</Button>\r\n         <Button style={styles.button} >Сохранить</Button>\r\n      </View>    \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginHorizontal: 16,\r\n  },\r\n  maskInput: {\r\n    padding: 10,\r\n    fontSize: 14,\r\n    borderRadius: 8,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  input: {\r\n    marginTop: 16,\r\n  },\r\n  button: {\r\n    marginTop: 13,\r\n  },\r\n  keyboardStyle: {\r\n    display: \"flex\",\r\n    height: 400,\r\n    bottom: 400,\r\n    backgroundColor: 'blue',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}